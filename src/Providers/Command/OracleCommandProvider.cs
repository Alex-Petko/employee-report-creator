using Oracle.ManagedDataAccess.Client;

namespace WpfTest
{
    /// <inheritdoc />
    internal class OracleCommandProvider : ICommandProvider
    {
        private const string NameParamName = ":name";
        private const int NameParamSize = 50;
        private const string SalaryParamName = ":salary";
        private const string PositionIdParamName = ":position_id";
        private const string SubdivisionIdParamName = ":subdivision_id";
        private const string EmployeeIdParamName = ":employee_id";
        
        private readonly IConfigurations _configurations;

        private string CreatePositionsTableCommandText =>
@"CREATE TABLE Positions(
    position_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
) ORGANIZATION INDEX";

        private string CreateCitiesTableCommandText =>
@"CREATE TABLE Cities(
    city_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
) ORGANIZATION INDEX";

        private string CreateSubdivisionsTableCommandText =>
@"CREATE TABLE Subdivisions(
    subdivision_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    city_id INT NOT NULL,
    
    FOREIGN KEY(city_id) REFERENCES Cities(city_id)
) ORGANIZATION INDEX";

        private string CreateEmployeesTableCommandText =>
@"CREATE TABLE Employees(
    employee_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(50) NOT NULL UNIQUE,
    salary INT NOT NULL,
    position_id INT NOT NULL,
    subdivision_id INT NOT NULL,
    FOREIGN KEY(position_id) REFERENCES Positions(position_id),
    FOREIGN KEY(subdivision_id) REFERENCES Subdivisions(subdivision_id)
) ORGANIZATION INDEX";

        private string FillTablesCommandText =>
@"INSERT ALL
    INTO Positions (position_id, name) VALUES (1, 'Разработчик')
    INTO Positions (position_id, name) VALUES (2, 'Маркетолог')
    INTO Positions (position_id, name) VALUES (3, 'Аналитик')
    INTO Positions (position_id, name) VALUES (4, 'Менеджер')
    INTO Cities (city_id, name) VALUES (1, 'Москва')
    INTO Cities (city_id, name) VALUES (2, 'Псков')
    INTO Cities (city_id, name) VALUES (3, 'Вологда')
    INTO Cities (city_id, name) VALUES (4, 'Курск')
    INTO Subdivisions (subdivision_id, name, city_id) VALUES (1, 'Кибербезопасность', 1)
    INTO Subdivisions (subdivision_id, name, city_id) VALUES (2, 'Техподдержка', 1)
    INTO Subdivisions (subdivision_id, name, city_id) VALUES (3, 'Разработка', 2)
    INTO Subdivisions (subdivision_id, name, city_id) VALUES (4, 'Тестирование', 3)
    INTO Employees (employee_id, name, salary, position_id, subdivision_id) VALUES (1, 'Ждунов', 200, 1, 1)
    INTO Employees (employee_id, name, salary, position_id, subdivision_id) VALUES (2, 'Петров', 333, 2, 2)
    INTO Employees (employee_id, name, salary, position_id, subdivision_id) VALUES (3, 'Иванов', 123, 3, 2)
    INTO Employees (employee_id, name, salary, position_id, subdivision_id) VALUES (4, 'Братов', 312, 4, 4)
SELECT * FROM DUAL";

        private string UpdateEmployeeCommandText => $"UPDATE employees SET name={NameParamName}, salary={SalaryParamName}, position_id={PositionIdParamName}, subdivision_id={SubdivisionIdParamName} WHERE employee_id={EmployeeIdParamName}";

        public OracleCommandProvider(IConfigurations configurations)
        {
            _configurations = configurations;
        }

        private void ExecuteNonQuery(OracleCommand command)
        {
            try
            {
                command.ExecuteNonQuery();
            }
            catch (OracleException)
            {
                // Ничего не делаем. Подавляем ошибку, что таблица уже создана
            }
        }

        public void TryInit()
        {
            using (var con = new OracleConnection(_configurations.ConnectionString))
            {
                con.Open();
                var cmd = con.CreateCommand();

                cmd.CommandText = CreatePositionsTableCommandText;
                ExecuteNonQuery(cmd);

                cmd.CommandText = CreateCitiesTableCommandText;
                ExecuteNonQuery(cmd);

                cmd.CommandText = CreateSubdivisionsTableCommandText;
                ExecuteNonQuery(cmd);

                cmd.CommandText = CreateSubdivisionsTableCommandText;
                ExecuteNonQuery(cmd);

                cmd.CommandText = CreateEmployeesTableCommandText;
                ExecuteNonQuery(cmd);

                cmd.CommandText = FillTablesCommandText;
                ExecuteNonQuery(cmd);
            }
        }

        public void Update(EmployeeVm employee)
        {
            using (var con = new OracleConnection(_configurations.ConnectionString))
            {
                con.Open();
                var cmd = con.CreateCommand();

                cmd.CommandText = UpdateEmployeeCommandText;

                cmd.Parameters.Add(NameParamName, OracleDbType.Varchar2, NameParamSize).Value = employee.Name;
                cmd.Parameters.Add(SalaryParamName, OracleDbType.Int64).Value = employee.Salary;
                cmd.Parameters.Add(PositionIdParamName, OracleDbType.Int64).Value = employee.PositionId;
                cmd.Parameters.Add(SubdivisionIdParamName, OracleDbType.Int64).Value = employee.SubdivisionId;
                cmd.Parameters.Add(EmployeeIdParamName, OracleDbType.Int64).Value = employee.EmployeeId;

                cmd.ExecuteNonQuery();
            }
        }
    }
}
